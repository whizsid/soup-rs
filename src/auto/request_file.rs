// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use glib::object::IsA;
use glib::translate::*;
use soup_sys;
use std::fmt;
use Request;

glib_wrapper! {
    pub struct RequestFile(Object<soup_sys::SoupRequestFile, soup_sys::SoupRequestFileClass, RequestFileClass>) @extends Request;

    match fn {
        get_type => || soup_sys::soup_request_file_get_type(),
    }
}

pub const NONE_REQUEST_FILE: Option<&RequestFile> = None;

pub trait RequestFileExt: 'static {
    //#[cfg(any(feature = "v0", feature = "dox"))]
    //fn get_file(&self) -> /*Ignored*/Option<gio::File>;
}

impl<O: IsA<RequestFile>> RequestFileExt for O {
    //#[cfg(any(feature = "v0", feature = "dox"))]
    //fn get_file(&self) -> /*Ignored*/Option<gio::File> {
    //    unsafe { TODO: call soup_sys:soup_request_file_get_file() }
    //}
}

impl fmt::Display for RequestFile {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "RequestFile")
    }
}
